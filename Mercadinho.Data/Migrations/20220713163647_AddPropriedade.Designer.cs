// <auto-generated />
using System;
using Mercadinho.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mercadinho.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20220713163647_AddPropriedade")]
    partial class AddPropriedade
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mercearia.Models.VendaContext.Caixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Caixa");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.CarrinhoDeCompras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CaixaId")
                        .HasColumnType("INT");

                    b.Property<int>("StatusDaCompra")
                        .HasColumnType("INT");

                    b.Property<decimal>("ValorTotalCarrinho")
                        .HasColumnType("Decimal(38,17)");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.ToTable("CarrinhoDeCompras");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.ItemCarrinho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarrinhoDeComprasId")
                        .HasColumnType("INT");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INT");

                    b.Property<int>("Qtd")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoDeComprasId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItemCarrinho");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("Decimal(38,17)");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.CarrinhoDeCompras", b =>
                {
                    b.HasOne("Mercearia.Models.VendaContext.Caixa", null)
                        .WithMany("CarrinhosDeCompras")
                        .HasForeignKey("CaixaId");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.ItemCarrinho", b =>
                {
                    b.HasOne("Mercearia.Models.VendaContext.CarrinhoDeCompras", "CarrinhoDeCompras")
                        .WithMany("Itens")
                        .HasForeignKey("CarrinhoDeComprasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mercearia.Models.VendaContext.Produto", "Produto")
                        .WithMany("ItensCarrinho")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarrinhoDeCompras");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.Caixa", b =>
                {
                    b.Navigation("CarrinhosDeCompras");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.CarrinhoDeCompras", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.Produto", b =>
                {
                    b.Navigation("ItensCarrinho");
                });
#pragma warning restore 612, 618
        }
    }
}
