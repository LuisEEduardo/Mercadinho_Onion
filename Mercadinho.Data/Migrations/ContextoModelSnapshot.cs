// <auto-generated />
using System;
using Mercadinho.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mercadinho.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mercearia.Models.VendaContext.CarrinhoDeCompras", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ValorTotalCarrinho")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CarrinhoDeCompras");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.ItemCarrinho", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CarrinhoDeComprasId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CarrinhoDeComprasId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProdutoId1")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<int>("Qtd")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoDeComprasId1");

                    b.HasIndex("ProdutoId1");

                    b.ToTable("ItemCarrinho");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("Decimal(38,17)");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.ItemCarrinho", b =>
                {
                    b.HasOne("Mercearia.Models.VendaContext.CarrinhoDeCompras", "CarrinhoDeCompras")
                        .WithMany("Itens")
                        .HasForeignKey("CarrinhoDeComprasId1");

                    b.HasOne("Mercearia.Models.VendaContext.Produto", "Produto")
                        .WithMany("ItensCarrinho")
                        .HasForeignKey("ProdutoId1");

                    b.Navigation("CarrinhoDeCompras");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.CarrinhoDeCompras", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("Mercearia.Models.VendaContext.Produto", b =>
                {
                    b.Navigation("ItensCarrinho");
                });
#pragma warning restore 612, 618
        }
    }
}
